### Test Spectra User Management API

# Variables
@baseUrl = https://localhost:7502
@email = test@example.com
@password = Test123!
@displayName = Test User
@token = YOUR_JWT_TOKEN_HERE

### Prerequisites: 
# 1. Ensure PostgreSQL is running
# 2. Register and login to get JWT token
# 3. Replace @token with actual JWT token from login response

### 1. Register a new user (if not already done)
POST {{baseUrl}}/api/auth/register
Content-Type: application/json

{
  "email": "{{email}}",
  "password": "{{password}}",
  "confirmPassword": "{{password}}",
  "displayName": "{{displayName}}"
}

### 2. Login to get JWT token (if not already done)
POST {{baseUrl}}/api/auth/login
Content-Type: application/json

{
  "email": "{{email}}",
  "password": "{{password}}",
  "rememberMe": false
}

### 3. Get current user's profile
GET {{baseUrl}}/api/users/me
Authorization: Bearer {{token}}

### 4. Update current user's profile
PUT {{baseUrl}}/api/users/me
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "displayName": "Updated Test User",
  "bio": "This is my updated bio. I love sharing photos!",
  "avatarUrl": "https://example.com/avatar.jpg"
}

### 5. Get current user's profile again (to see updates)
GET {{baseUrl}}/api/users/me
Authorization: Bearer {{token}}

### 6. Get user profile by ID (replace USER_ID with actual user ID)
GET {{baseUrl}}/api/users/USER_ID_HERE
Authorization: Bearer {{token}}

### 7. Get user statistics by ID (replace USER_ID with actual user ID)
GET {{baseUrl}}/api/users/USER_ID_HERE/stats
Authorization: Bearer {{token}}

### 8. Search for users
GET {{baseUrl}}/api/users/search?q=test&limit=10
Authorization: Bearer {{token}}

### 9. Search for users with different query
GET {{baseUrl}}/api/users/search?q=user&limit=5
Authorization: Bearer {{token}}

### 10. Test validation - Update profile with invalid data
PUT {{baseUrl}}/api/users/me
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "displayName": "This display name is way too long and should exceed the 100 character limit that we have set for display names in our validation rules",
  "bio": "This bio is also way too long and should exceed the 500 character limit that we have set for bio fields in our validation rules. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
  "avatarUrl": "not-a-valid-url"
}

### 11. Test unauthorized access (without token)
GET {{baseUrl}}/api/users/me

### 12. Test getting non-existent user
GET {{baseUrl}}/api/users/non-existent-user-id
Authorization: Bearer {{token}}
